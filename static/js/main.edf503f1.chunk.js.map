{"version":3,"sources":["helper/helper.js","components/CharacterList.js","tableGenerator.js","components/Scripter.js","App.js","reportWebVitals.js","index.js"],"names":["initObj","dialouge","characterName","CharacterList","list","setList","textContent","setTextContent","isWin","useState","setCharacterName","className","length","map","character","i","type","onClick","index","oldList","filter","_","handleCharacterRemove","style","height","aria-label","aria-describedby","value","onChange","e","target","placeholder","id","includes","alert","disabled","role","scriptData","characterList","console","log","JSON","stringify","textArray","split","script","scriptObj","charString","trim","some","el","toLowerCase","push","processTextContent","Packer","toBlob","tableRows","line","TableRow","children","TableCell","width","size","WidthType","DXA","Paragraph","table","Table","columnWidths","rows","Document","sections","text","tableGenerator","then","blob","saveAs","Scripter","setCharacterList","textAreaRef","useRef","class","ref","for","txt","current","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edf503f1.chunk.js","sourcesContent":["// ALGO I\r\n// export function processTextContent({ textContent, characterList, isWin }) {\r\n//   const newLine = isWin ? \"\\r\\n\" : \"\\n\";\r\n//   const textArray = textContent.split(newLine);\r\n\r\n//   console.log(textArray);\r\n\r\n//   const script = {};\r\n//   let id = 0;\r\n//   let dialouge = \"\";\r\n//   let characterName = null;\r\n\r\n//   for (let i = 0; i <= textArray.length; i++) {\r\n//     const charString = textArray[i];\r\n\r\n//     // eslint-disable-next-line no-loop-func\r\n//     characterList.forEach((el) => {\r\n//       if (charString && charString.toLowerCase() === el.toLowerCase()) {\r\n//         characterName = el;\r\n//       }\r\n//     });\r\n\r\n//     if (characterName) {\r\n//       dialouge = \"\";\r\n//       id += 1;\r\n\r\n//       script[id.toString()] = {\r\n//         characterName,\r\n//         dialouge,\r\n//       };\r\n//       characterName = null;\r\n//       continue;\r\n//     }\r\n\r\n//     if (!characterName) {\r\n//       dialouge += charString;\r\n\r\n//       if (\r\n//         script[id.toString()] &&\r\n//         script[id.toString()].dialouge !== undefined\r\n//       ) {\r\n//         script[id.toString()].dialouge = dialouge;\r\n//       }\r\n\r\n//       characterName = null;\r\n//     }\r\n//   }\r\n\r\n//   return script;\r\n// }\r\n\r\n// ALGO II\r\n\r\nconst initObj = {\r\n  dialouge: \"\",\r\n  characterName: null,\r\n};\r\nexport function processTextContent({ textContent, characterList }) {\r\n  console.log(JSON.stringify(textContent));\r\n\r\n  const textArray = textContent.split(\"\\n\");\r\n\r\n  console.log(textArray);\r\n\r\n  let script = [];\r\n\r\n  let scriptObj = { ...initObj };\r\n\r\n  for (let i = 0; i <= textArray.length; i++) {\r\n    const charString = textArray[i]?.trim();\r\n\r\n    const isCharacter =\r\n      charString &&\r\n      characterList.some((el) => charString.toLowerCase() === el.toLowerCase());\r\n\r\n    if (isCharacter) {\r\n      if (scriptObj.dialouge.length && scriptObj.characterName) {\r\n        script.push(scriptObj);\r\n\r\n        scriptObj = {\r\n          ...initObj,\r\n          characterName: charString,\r\n        };\r\n      }\r\n\r\n      scriptObj.characterName = charString;\r\n\r\n      continue;\r\n    }\r\n\r\n    scriptObj.dialouge += charString;\r\n  }\r\n\r\n  return script;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { processTextContent } from \"../helper/helper\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { Packer } from \"docx\";\r\nimport { tableGenerator } from \"../tableGenerator\";\r\n\r\nfunction CharacterList({\r\n  list = [],\r\n  setList,\r\n  textContent,\r\n  setTextContent,\r\n  isWin,\r\n}) {\r\n  const [characterName, setCharacterName] = useState();\r\n\r\n  function handleCharacterAdd() {\r\n    if (!list.includes(characterName)) {\r\n      setList([...list, characterName]);\r\n      setCharacterName(\"\");\r\n      return;\r\n    }\r\n\r\n    alert(\"Character exists on the list already!\");\r\n  }\r\n\r\n  function handleCharacterRemove(index) {\r\n    const oldList = list.filter((_, i) => i !== index);\r\n    setList(oldList);\r\n  }\r\n\r\n  function handleReset() {\r\n    setList([]);\r\n    setTextContent(\"\");\r\n  }\r\n\r\n  function handleSubmit() {\r\n    const scriptData = processTextContent({\r\n      textContent,\r\n      characterList: list,\r\n      isWin,\r\n    });\r\n\r\n    Packer.toBlob(tableGenerator(scriptData)).then((blob) => {\r\n      saveAs(blob, \"scripted.docx\");\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid mb-4\">\r\n      <h2 className=\"m-2 mt-4\">Character List!</h2>\r\n      <div className=\"row justify-content-center mt-4\">\r\n        <div className=\"col-10\">\r\n          <ul className=\"list-group\">\r\n            <div className=\"row g-4 m-4 \">\r\n              {list.length > 0 &&\r\n                list.map((character, i) => (\r\n                  <div className=\"col-12\" key={`${character}${i}`}>\r\n                    <li className=\"list-group-item\">\r\n                      <div className=\"row align-items-center\">\r\n                        <div className=\"col-9\">\r\n                          <h6>{character}</h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => handleCharacterRemove(i)}\r\n                          >\r\n                            Remove\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </div>\r\n                ))}\r\n              <div className=\"col-12\">\r\n                <div className=\"input-group \" style={{ height: \"100%\" }}>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    aria-label=\"Recipient's username\"\r\n                    aria-describedby=\"button-addon2\"\r\n                    value={characterName}\r\n                    onChange={(e) => setCharacterName(e.target.value)}\r\n                    placeholder=\"Character name\"\r\n                    style={{ height: \"100%\" }}\r\n                  />\r\n                  <button\r\n                    className=\"btn btn-outline-secondary\"\r\n                    type=\"button\"\r\n                    id=\"button-addon2\"\r\n                    onClick={handleCharacterAdd}\r\n                    disabled={!characterName}\r\n                  >\r\n                    Add Character\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <div\r\n                className=\"btn-group\"\r\n                role=\"group\"\r\n                aria-label=\"Basic outlined example\"\r\n              >\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-primary\"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Submit\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-danger\"\r\n                  onClick={handleReset}\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CharacterList;\r\n","import {\r\n  Document,\r\n  Paragraph,\r\n  Table,\r\n  TableCell,\r\n  TableRow,\r\n  WidthType,\r\n} from \"docx\";\r\n\r\nexport function tableGenerator(script) {\r\n  console.log(script);\r\n\r\n  const tableRows = script.map(\r\n    (line) =>\r\n      new TableRow({\r\n        children: [\r\n          new TableCell({\r\n            width: {\r\n              size: 1000,\r\n              type: WidthType.DXA,\r\n            },\r\n            children: [],\r\n          }),\r\n          new TableCell({\r\n            width: {\r\n              size: 1000,\r\n              type: WidthType.DXA,\r\n            },\r\n            children: [new Paragraph(line?.characterName)],\r\n          }),\r\n          new TableCell({\r\n            width: {\r\n              size: 2505,\r\n              type: WidthType.DXA,\r\n            },\r\n            children: [new Paragraph(line?.dialouge)],\r\n          }),\r\n          new TableCell({\r\n            width: {\r\n              size: 3000,\r\n              type: WidthType.DXA,\r\n            },\r\n            children: [],\r\n          }),\r\n        ],\r\n      })\r\n  );\r\n\r\n  console.log(tableRows);\r\n\r\n  const table = new Table({\r\n    columnWidths: [1000, 2505, 3000],\r\n    rows: [\r\n      new TableRow({\r\n        children: [\r\n          new TableCell({\r\n            width: {\r\n              size: 1000,\r\n              type: WidthType.DXA,\r\n            },\r\n            children: [new Paragraph(\"Timelog\")],\r\n          }),\r\n          new TableCell({\r\n            width: {\r\n              size: 1000,\r\n              type: WidthType.DXA,\r\n            },\r\n            children: [new Paragraph(\"Character Name\")],\r\n          }),\r\n          new TableCell({\r\n            width: {\r\n              size: 2505,\r\n              type: WidthType.DXA,\r\n            },\r\n            children: [new Paragraph(\"Dialouge\")],\r\n          }),\r\n          new TableCell({\r\n            width: {\r\n              size: 3000,\r\n              type: WidthType.DXA,\r\n            },\r\n            children: [new Paragraph(\"Bangla\")],\r\n          }),\r\n        ],\r\n      }),\r\n      ...tableRows,\r\n    ],\r\n  });\r\n\r\n  return new Document({\r\n    sections: [\r\n      {\r\n        children: [\r\n          new Paragraph({\r\n            text: \"Mohaimin Is the best boyfriend in the world\",\r\n          }),\r\n          table,\r\n        ],\r\n      },\r\n    ],\r\n  });\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport CharacterList from \"./CharacterList\";\r\n\r\nfunction Scripter() {\r\n  const [characterList, setCharacterList] = useState([]);\r\n  const [textContent, setTextContent] = useState(\"\");\r\n  // const [isWin, setIsWin] = useState(false);\r\n  const textAreaRef = useRef(null);\r\n\r\n  const onSubmit = () => {\r\n    const txt = textAreaRef?.current?.value;\r\n    if (txt) {\r\n      setTextContent(txt);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {textContent ? (\r\n        <CharacterList\r\n          textContent={textContent}\r\n          setTextContent={setTextContent}\r\n          list={characterList}\r\n          setList={setCharacterList}\r\n          // isWin={isWin}\r\n        />\r\n      ) : (\r\n        <div class=\"form-floating\">\r\n          <textarea\r\n            ref={textAreaRef}\r\n            className=\"form-control\"\r\n            placeholder=\"Leave a comment here\"\r\n            id=\"floatingTextarea2\"\r\n          ></textarea>\r\n          <label for=\"floatingTextarea2\">Script text</label>\r\n          <button onClick={onSubmit} className=\"btn btn-primary\">\r\n            Next\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Scripter;\r\n","import \"./App.css\";\r\nimport Scripter from \"./components/Scripter\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Scripter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}