{"version":3,"sources":["helper/helper.js","components/CharacterList.js","helper/tableGenerator.js","components/Scripter.js","App.js","reportWebVitals.js","index.js"],"names":["initObj","dialouge","characterName","CharacterList","list","setList","textContent","setTextContent","isWin","useState","characterNames","setCharacterNames","fiileName","setFileName","className","length","map","character","i","type","onClick","index","oldList","filter","_","handleCharacterRemove","style","height","value","placeholder","id","onChange","e","target","characterList","split","el","trim","uniqueCharacterList","Set","disabled","aria-label","aria-describedby","class","role","scriptData","console","log","JSON","stringify","textArray","script","scriptObj","elem","some","toLowerCase","push","processTextContent","Packer","toBlob","tableRows","line","TableRow","children","TableCell","Paragraph","table","Table","width","size","WidthType","PERCENTAGE","rows","tableHeader","Document","sections","text","alignment","AlignmentType","CENTER","tableGenerator","then","blob","saveAs","Scripter","setCharacterList","textAreaRef","useRef","ref","for","txt","current","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84cf1a58.chunk.js","sourcesContent":["// ALGO I\r\n// export function processTextContent({ textContent, characterList, isWin }) {\r\n//   const newLine = isWin ? \"\\r\\n\" : \"\\n\";\r\n//   const textArray = textContent.split(newLine);\r\n\r\n//   console.log(textArray);\r\n\r\n//   const script = {};\r\n//   let id = 0;\r\n//   let dialouge = \"\";\r\n//   let characterName = null;\r\n\r\n//   for (let i = 0; i <= textArray.length; i++) {\r\n//     const charString = textArray[i];\r\n\r\n//     // eslint-disable-next-line no-loop-func\r\n//     characterList.forEach((el) => {\r\n//       if (charString && charString.toLowerCase() === el.toLowerCase()) {\r\n//         characterName = el;\r\n//       }\r\n//     });\r\n\r\n//     if (characterName) {\r\n//       dialouge = \"\";\r\n//       id += 1;\r\n\r\n//       script[id.toString()] = {\r\n//         characterName,\r\n//         dialouge,\r\n//       };\r\n//       characterName = null;\r\n//       continue;\r\n//     }\r\n\r\n//     if (!characterName) {\r\n//       dialouge += charString;\r\n\r\n//       if (\r\n//         script[id.toString()] &&\r\n//         script[id.toString()].dialouge !== undefined\r\n//       ) {\r\n//         script[id.toString()].dialouge = dialouge;\r\n//       }\r\n\r\n//       characterName = null;\r\n//     }\r\n//   }\r\n\r\n//   return script;\r\n// }\r\n\r\n// ALGO II\r\n\r\nconst initObj = {\r\n  dialouge: \"\",\r\n  characterName: null,\r\n};\r\nexport function processTextContent({ textContent, characterList }) {\r\n  console.log(JSON.stringify(textContent));\r\n\r\n  const textArray = textContent.split(\"\\n\");\r\n\r\n  console.log(textArray);\r\n\r\n  let script = [];\r\n\r\n  let scriptObj = { ...initObj };\r\n\r\n  for (let i = 0; i <= textArray.length; i++) {\r\n    const elem = textArray[i]?.trim();\r\n\r\n    const isCharacter =\r\n      elem &&\r\n      characterList.some((el) => elem.toLowerCase() === el.toLowerCase());\r\n\r\n    if (isCharacter) {\r\n      if (scriptObj.dialouge.length && scriptObj.characterName) {\r\n        script.push(scriptObj);\r\n\r\n        scriptObj = {\r\n          ...initObj,\r\n          characterName: elem,\r\n        };\r\n      }\r\n\r\n      scriptObj.characterName = elem;\r\n\r\n      continue;\r\n    }\r\n\r\n    scriptObj.dialouge += elem;\r\n  }\r\n\r\n  return script;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { processTextContent } from \"../helper/helper\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { Packer } from \"docx\";\r\nimport { tableGenerator } from \"../helper/tableGenerator\";\r\n\r\nfunction CharacterList({\r\n  list = [],\r\n  setList,\r\n  textContent,\r\n  setTextContent,\r\n  isWin,\r\n}) {\r\n  const [characterNames, setCharacterNames] = useState();\r\n  const [fiileName, setFileName] = useState();\r\n\r\n  function handleCharacterRemove(index) {\r\n    const oldList = list.filter((_, i) => i !== index);\r\n    setList(oldList);\r\n  }\r\n\r\n  function handleReset() {\r\n    setList([]);\r\n    setTextContent(\"\");\r\n  }\r\n\r\n  function handleSubmit() {\r\n    const scriptData = processTextContent({\r\n      textContent,\r\n      characterList: list,\r\n      isWin,\r\n    });\r\n\r\n    Packer.toBlob(tableGenerator(scriptData)).then((blob) => {\r\n      saveAs(blob, `${fiileName || \"scripted\"}.docx`);\r\n    });\r\n  }\r\n\r\n  function handleGenerateCharacters() {\r\n    const charactersArray = characterNames.split(\"\\n\");\r\n\r\n    const characterList = charactersArray\r\n      .map((el) => el?.trim())\r\n      .filter((el) => el !== \"\");\r\n\r\n    const uniqueCharacterList = new Set([...list, ...characterList]);\r\n\r\n    setList([...uniqueCharacterList]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container py-5\">\r\n      <div className=\"row justify-content-center\">\r\n        <h2 className=\"m-2 mt-4\">Character List!</h2>\r\n        <div className=\"col-10\">\r\n          <ul className=\"list-group\">\r\n            <div className=\"row g-4 m-4 \">\r\n              {list.length > 0 &&\r\n                list.map((character, i) => (\r\n                  <div className=\"col-6\" key={`${character}${i}`}>\r\n                    <li className=\"list-group-item\">\r\n                      <div className=\"row align-items-center\">\r\n                        <div className=\"col-9\">\r\n                          <h6>{character}</h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => handleCharacterRemove(i)}\r\n                          >\r\n                            Remove\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"input-group \" style={{ height: \"100%\" }}>\r\n          <textarea\r\n            value={characterNames}\r\n            className=\"form-control\"\r\n            placeholder=\"Character list\"\r\n            style={{ height: \"100px\" }}\r\n            id=\"floatingTextarea2\"\r\n            onChange={(e) => setCharacterNames(e.target.value)}\r\n          />\r\n          <button\r\n            className=\"btn btn-outline-secondary\"\r\n            type=\"button\"\r\n            id=\"button-addon2\"\r\n            onClick={handleGenerateCharacters}\r\n            disabled={!characterNames}\r\n          >\r\n            Generate List\r\n          </button>\r\n        </div>\r\n        <div className=\"col-auto\">\r\n          <div className=\"input-group mt-5\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              aria-label=\"Recipient's username\"\r\n              aria-describedby=\"button-addon2\"\r\n              value={fiileName}\r\n              onChange={(e) => setFileName(e.target.value)}\r\n              placeholder=\"Filename\"\r\n            />\r\n            <span class=\"input-group-text\" id=\"basic-addon2\">\r\n              .docx\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12 mt-4\">\r\n          <div\r\n            className=\"btn-group\"\r\n            role=\"group\"\r\n            aria-label=\"Basic outlined example\"\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-primary\"\r\n              onClick={handleSubmit}\r\n            >\r\n              Submit\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-danger\"\r\n              onClick={handleReset}\r\n            >\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CharacterList;\r\n","import {\r\n  Document,\r\n  Paragraph,\r\n  Table,\r\n  TableCell,\r\n  TableRow,\r\n  WidthType,\r\n  AlignmentType,\r\n} from \"docx\";\r\n\r\nexport function tableGenerator(script) {\r\n  console.log(script);\r\n\r\n  const tableRows = script.map(\r\n    (line) =>\r\n      new TableRow({\r\n        children: [\r\n          new TableCell({\r\n            children: [],\r\n          }),\r\n          new TableCell({\r\n            children: [new Paragraph(line?.characterName)],\r\n          }),\r\n          new TableCell({\r\n            children: [new Paragraph(line?.dialouge)],\r\n          }),\r\n          new TableCell({\r\n            children: [],\r\n          }),\r\n        ],\r\n      })\r\n  );\r\n\r\n  console.log(tableRows);\r\n\r\n  const table = new Table({\r\n    width: {\r\n      size: 100,\r\n      type: WidthType.PERCENTAGE,\r\n    },\r\n    rows: [\r\n      new TableRow({\r\n        tableHeader: true,\r\n        children: [\r\n          new TableCell({\r\n            children: [new Paragraph(\"Timelog\")],\r\n          }),\r\n          new TableCell({\r\n            children: [new Paragraph(\"Character Name\")],\r\n          }),\r\n          new TableCell({\r\n            children: [new Paragraph(\"Dialouge\")],\r\n          }),\r\n          new TableCell({\r\n            children: [new Paragraph(\"Bangla\")],\r\n          }),\r\n        ],\r\n      }),\r\n      ...tableRows,\r\n    ],\r\n  });\r\n\r\n  return new Document({\r\n    sections: [\r\n      {\r\n        children: [\r\n          new Paragraph({\r\n            text: \"Mohaimin Is the best boyfriend in the world\",\r\n            alignment: AlignmentType.CENTER,\r\n          }),\r\n          table,\r\n        ],\r\n      },\r\n    ],\r\n  });\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport CharacterList from \"./CharacterList\";\r\n\r\nfunction Scripter() {\r\n  const [characterList, setCharacterList] = useState([]);\r\n  const [textContent, setTextContent] = useState(\"\");\r\n  const textAreaRef = useRef(null);\r\n\r\n  const onSubmit = () => {\r\n    const txt = textAreaRef?.current?.value;\r\n    if (txt) {\r\n      setTextContent(txt);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {textContent ? (\r\n        <CharacterList\r\n          textContent={textContent}\r\n          setTextContent={setTextContent}\r\n          list={characterList}\r\n          setList={setCharacterList}\r\n          // isWin={isWin}\r\n        />\r\n      ) : (\r\n        <div className=\"container-fluid px-5 mt-5\">\r\n          <div class=\"form-floating\">\r\n            <textarea\r\n              ref={textAreaRef}\r\n              className=\"form-control\"\r\n              placeholder=\"Leave a comment here\"\r\n              style={{ height: \"300px\" }}\r\n              id=\"floatingTextarea2\"\r\n            ></textarea>\r\n            <label for=\"floatingTextarea2\">Script text</label>\r\n            <button onClick={onSubmit} className=\"btn btn-primary mt-5\">\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Scripter;\r\n","import \"./App.css\";\r\nimport Scripter from \"./components/Scripter\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Scripter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}